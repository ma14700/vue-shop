<template>
  <div class="comment">
      <div class="reviews">
        <!--  -->
        <div class="write">
            <textarea name="" id="" class="write-here" v-model="RateContent" placeholder="写下体会，帮助其他小伙伴吧~"></textarea>
            <ul class="picture">

                <li v-for="(item,index) in uploadFiles" :key="index">
                    <img v-lazy="item" alt="">
                    <span class="iconfont icon-cuohao little-button" @click="deleteImg(index)"></span>
                </li>
                <li v-if="uploadFiles.length < 3">
                    <i class="iconfont icon-xiangji"></i>
                    <p @click="uploadItem(file)">添加图片<br>{{uploadFiles.length}}/3</p>
                    <vue-file-upload url="/api/handler/upload" class="iconfont icon-right" name="imgFile" :auto-upload="true" :compress="uploadCompress" :filters="uploadFilters" :events="uploadEvents"></vue-file-upload>
                </li>

            </ul>
        </div>

    </div>
    <div class="confirm-reviews" @click="submitComment()">提交评论</div>
  </div>
</template>

<script>
import { Lazyload } from 'mint-ui';
import { Navbar, TabItem } from 'mint-ui';
import { Toast } from 'mint-ui';
import { Popup } from 'mint-ui';
import VueFileUpload from 'vue-file-upload-with-compress';
import { ImageCompress } from '../../config/mUtils';
import { MessageBox } from 'mint-ui';
export default {
    data() {
        var __this = this;
        return {
            isLoading: true,
            selected: '0',
            myorder: [],
            waitPay: [],
            waitGoods: [],
            waitReceive: [],
            waitEvaluated: [],
            popupVisible: false,
            inputdata: '5',
            RateContent: null,
            commentLable: [],
            chooseLable: [],
            RateResult: '',
            RatePicture: '',
            OrderInfoId: '',
            file: [],
            files: [],
            uploadFiles: [],
            uploadEvents: {
                onCompleteUpload: function(file, res, status) {
                    if (res && res.success) {
                        __this.uploadFiles.push(res.url);
                        Toast({
                            message: res.success ? '上传成功' : res.message,
                            position: 'bottom',
                            duration: 1.5e3
                        });
                    }
                    __this.RatePicture = __this.uploadFiles.join(",");
                },
                onBeforeUpload: function() {
                    Toast({
                        message: '正在上传..',
                        position: 'bottom',
                        duration: 1.5e3
                    });
                }
            },
            uploadFilters: [
                {
                    name: "imageFilter",
                    fn(file) {
                        var type = '|' + file.type.slice(file.type.lastIndexOf('/') + 1) + '|';
                        if ('|jpg|png|jpeg|bmp|'.indexOf(type) == -1) {
                            //mui.toast('不支持的文件类型');
                            return false;
                        }
                        return true;
                    }
                }
            ],
            uploadCompress: {
                enable: true,
                compresor: function(file, callback) {
                    let instance = Toast({
                        message: '正在压缩..',
                        iconClass: 'compress'
                    });

                    ImageCompress(file, 0.8, 'height', function(nfile) {
                        callback(nfile);
                        instance.close();
                    });
                }
            },
        }
    },
    beforeMount() {

    },
    components: {
        VueFileUpload
    },
    created() {
    
    },
    mounted() {
        this.OrderInfoId = this.$route.query.id;
    },
    watch: {
        '$route'(to, from) {
            this.selected = this.$route.query.selected;
        },
      
    },
    computed: {

    },
    methods: {
        //
        proData(pro) {
            pro = pro.split(";");
            let data = [];
            for (let i = 0; i < pro.length; i++) {
                data.push(pro[i].split(":")[1]);
            }
            return data.join(";");
        },
        deleteImg(index) {
            this.uploadFiles.splice(index, 1);
            this.RatePicture = this.uploadFiles.join(",");
        },
        // 评论标签列表
        getCommentLable() {
            this.$http.get('/api/ratelabel/list'+ this.$route.query.id).then(res => {
                this.commentLable = res.data.data
            })
        },
        // 评论
        submitComment() {
            if(this.RateContent != null){
                this.$http.post('/api/neworder/evaluate/'+this.$route.query.id, {
                "RateContent": this.RateContent,
                "OrderId": this.OrderInfoId,
                "RateScore": '5',
                "RatePicture": this.RatePicture,
            }).then(res => {
                if (res.data.success) {
                    MessageBox({
                        title: '评价成功',
                        message: '',
                        confirmButtonText: '完成',
                        closeOnClickModal:false
                    }).then(action => {
                       location.href="/order?selected=0";
                       //this.$router.push({ path: '/myorder?selected=4' });
                    });
                } else {
                    MessageBox({
                        title: '网络超时，请稍后重试',
                        message: '',
                        confirmButtonText: '好的',
                        closeOnClickModal:false
                    }).then(action => {

                    });
                }
            })
            this.popupVisible = false;
            }else{
                Toast({
                        message: '评价内容不能为空哦',
                        position: 'bottom',
                        duration: 1.5e3
                });
            }

        },
     

       

        //上传图片
        onStatus(file) {
            if (file.isSuccess) {
                return "上传成功";
            } else if (file.isError) {
                return "上传失败";
            } else if (file.isUploading) {
                return "正在上传";
            } else {
                return "待上传";
            }
        },
        onAddItem(files) {
            this.files = files;
        },
        uploadItem(file) {
            //单个文件上传
            file.upload();
        },
        uploadAll() {
            //上传所有文件
            this.$refs.vueFileUploader.uploadAll();
        },
        clearAll() {
            //清空所有文件
            this.$refs.vueFileUploader.clearAll();
        }

    },
    filters: {
        //保留两位小数点
        two: function(value) {
            if (!value) { return '' };
            return value.toFixed(2);
        },
        dot: function(value) {
            if (value.length > 18) {
                return value.slice(0, 18) + '...'
            } else {
                return value
            }

        }
    }
}
</script>

<style>


.mint-tab-item-label {
    height: 1.17333rem !important;
    line-height: 1.17333rem !important;
}

.mint-toast {
    z-index: 99999;
}

.allorder {
    background: #ece5f4;
}

.allorder .mint-navbar .mint-tab-item.is-selected {
    border-bottom: 1px solid #492b67;
    color: #492b67;
    margin: 0;
}

.allorder .mint-navbar .mint-tab-item {
    padding: 0;
    height: 1.17333rem;
    color: #b0a4bc;
    border-bottom: 1px solid #ece5f4;
}

.allorder .mint-navbar .mint-tab-item .mint-tab-item-label {
    line-height: 1.17333rem ;
    font-size: .4rem;
}


.allorder .mygoods {

    margin: 0.26rem 0;

    overflow: hidden;
    box-sizing: border-box;
    background: #fff;
}

.allorder .order-id {
    font-size: .4rem;
    color: #492b67;
    margin: .4rem 0;
    overflow: hidden;
    padding: 0 .4rem;
}

.allorder .goods-wraper {
    overflow: hidden;
    width: 100%;
    background: #ece5f4;
    padding: 0 .4rem;
    box-sizing: border-box;
    border-bottom: 1px solid #fff;
}

.allorder .order-id span {
    float: right;
    color: #de3163;
    font-size: .4rem;
}

.allorder .goods-img {
    width: 2.26rem;
    height: 1.883334rem;
    border: 1px solid #ece5f4;
    border-radius: 0.1333rem;
    float: left;
    overflow: hidden;
    z-index: 999;
    margin: .4rem 0;
}

.allorder .goods-img img {
    width: 100%;
    height: 100%;
}

.allorder .goods-text {
    float: left;
    width: 4.5rem;
    padding: 0.6rem .2rem 0;
    box-sizing: border-box
}

.allorder .goods-text p {

    line-height: .56rem;
    overflow: hidden;
    font-size: .4rem;
    color: #492b67;
}

.allorder .goods-text span {
    color: #b0a4bc;
    display: block;
    margin-top: .4rem;
}

.allorder .goods-price {
    position: relative;
    color: #492b67;
    box-sizing: border-box;
    text-align: right;
    line-height: .56rem;
    height: 2.66rem;
    padding-top: .6rem;
    font-size: .4rem;
}

.allorder .goods-price .nowpriice {
    color: #de3163;
}


.allorder .mystatus {
    width: 100%;
    overflow: hidden;
    box-sizing: border-box
}

.allorder .mystatus .total-num {
    text-align: right;
    font-size: .4rem;
    color: #492b67;
    border-bottom: 1px solid #ece5f4;
    padding: .4rem;
}

.allorder .mystatus .waitting {
    display: block;
    padding: .4rem;
    overflow: hidden;
}

.allorder .mystatus .waitting i.red-text {
    color: #de3163;
    border: 1px solid #de3163;
}

.allorder .mystatus .waitting .status-button {
    padding: .1rem .4rem;
    border-radius: .1333rem;
    font-size: .4rem;
    display: block;
    float: right;
    margin-left: .26rem;
    color: #b0a4bc;
    border: 1px solid #b0a4bc;
}

/*  */

.allorder .blankpage {
    min-height: 14.8rem;
    background: #fff;
    text-align: center;
    font-size: .48rem;
    color: #b0a4bc
}

.allorder .blankpage p {
    line-height: 14rem
}

.comment .reviews {
    padding: .4rem;
    width: 10rem;
    box-sizing: border-box;
}

.comment .reviews .pleased {
    font-size: .4rem;
    color: #492b67;
}

.comment .all>input {
    opacity: 0;
    position: absolute;
    width: .426667rem;
    height: .426667rem;
    margin: 0;
}

.comment .all>input:nth-of-type(1),
.comment .all>span:nth-of-type(1) {
    display: none;
}

.comment .all>span {
    font-size: .533333rem;
    color: #de3163;
    -webkit-transition: color .2s;
    transition: color .2s;
}

.comment .all>input:checked~span {
    color: #b0a4bc;
}

.comment .all>input:checked+span {
    color: #de3163;
}

/*  */

.comment .comments {
    margin-top: .4rem;
    overflow: hidden;
}

.comment .comments li {
    line-height: .6rem;
    padding: 0 .4rem;
    border-radius: .133333rem;
    height: .6rem;
    border: 1px solid #b0a4bc;
    float: left;
    margin-right: .266667rem;
    margin-bottom: .266667rem;
    color: #b0a4bc;
    font-size: .4rem
}

.comment .comments li.red-text {
    color: #de3163;
    border-color: #de3163;
}

/*xie  */

.comment .write {
    box-sizing: border-box;
    color: #b0a4bc;
    text-align: center;
    position: relative;
    overflow: hidden;
}

.comment .write-here {
    width: 100%;
    height: 3rem;
    padding: .4rem 0;
    box-sizing: border-box;
    color: #b0a4bc;
    font-size: .36rem;
    border: 0;
    line-height: .48rem;
}

.comment .write .picture {}

.comment .write .picture li {
    margin-right: .266667rem;
    float: left;
    width: 1.8rem;
    height: 1.8rem;
    border: 1px dashed #b0a4bc;
    position: relative;
}

.comment .picture li img {
    width: 100%;
    height: 100%;
}

.comment .picture li i {
    margin-top: .25rem;
    display: block;
    font-size: .6rem;
}

.comment .picture .little-button {
    position: absolute;
    right: -.2rem;
    top: -.1rem;
    color: #b0a4bc;
    font-size: .4rem;
}

/*  */

.comment .confirm-reviews {
    height: 1.306667rem;
    line-height: 1.306667rem;
    text-align: center;
    font-size: .48rem;
    color: #fff;
    background: linear-gradient(to right, #926eb7, #de3193);
}

/* messagebox */

.mint-msgbox-title {
    color: #b0a4bc;
    font-size: .533333rem;
    font-weight: normal;
}

.mint-msgbox-message {
    color: #b0a4bc;
}

.mint-msgbox-btn.mint-msgbox-confirm {
    color: #492b67;
    font-size: .48rem;
}

.mint-msgbox-btn.mint-msgbox-cancel {
    color: #b0a4bc;
    font-size: .48rem;
}

::-webkit-input-placeholder {
    /* WebKit, Blink, Edge */
    color: #b0a4bc;
    font-size: .4rem
}

:-moz-placeholder {
    /* Mozilla Firefox 4 to 18 */
    color: #b0a4bc;
    font-size: .4rem
}

::-moz-placeholder {
    /* Mozilla Firefox 19+ */
    color: #b0a4bc;
    font-size: .4rem
}

:-ms-input-placeholder {
    /* Internet Explorer 10-11 */
    color: #b0a4bc;
    font-size: .4rem
}
</style>

