<template>
    <div class="goodsdetail">
        <div class="banner">
          <threed-max v-if="!!goodsDetail.threeDModelObjUrl && params=='model'" :objUrl="goodsDetail.threeDModelObjUrl" :mtlUrl ="goodsDetail.threeDModelMtlUrl" ></threed-max>
          <mt-swipe :auto="4000" v-if="params=='pic'">
            <mt-swipe-item v-for="(item,index) in detailImg" :key="index"><img :src="item" alt=""></mt-swipe-item>
          </mt-swipe>
          <div class="change-btn">
              <span @click="changeType('model')" :class="params=='model'?'red':''">3D模型</span>
              <span @click="changeType('pic')" :class="params=='pic'?'red':''">图片</span>
          </div>
            <!-- <div class="change-btn2">
                <span @click="changeType('model')" :class="params=='model'?'red':''" class="iconfont icon-Djianmo"></span>
                <span @click="changeType('pic')" :class="params=='pic'?'red':''" class="iconfont icon-picture1"></span>
            </div> -->
        </div>
        <p class="goods-name">{{goodsDetail.goodName}}</p>
        <p class="goods-price">¥{{goodsDetail.goodSalePrice | two}}</p>
        <p class="goods-info">重量：100g <span>满188包邮（5kg以内）</span> </p>
        <p class="goods-shop"><i class="iconfont icon-shangpin"></i> 本产品由&ensp;{{goodsDetail.supplierName}}&ensp;提供</p>
        <ul class="condition">
            <li @click="handleClick('goodparams')" v-if="goodParam.length !=0">产品参数<i class="iconfont icon-right" ></i></li>
            <li @click="handleClick('choose')">选择商品规格和数量<i class="iconfont icon-right"></i></li>
        </ul>
        <mt-popup v-model="popupVisible" closeOnClickModal="false" popup-transition="popup-fade" position="bottom" @touchmove.prevent >
            <div v-if="modal == 'goodparams'" class="params-wrp">
                <h2>产品参数</h2>
                <ul>
                    <li v-for="n in goodParam"><span>{{n.name}}</span>{{n.value}}</li>
                </ul>
                <p @click="confirmParams">确认</p>
            </div>
            <div v-if="modal == 'choose'" class="choose-wrp">
                <div class="title">
                    <div class="picture">
                        <img v-lazy.container="detailImg[0]" alt="">
                    </div>
                     <div class="pic-name">
                        <div class="pic-title">{{goodsDetail.goodName | dot}}</div>
                        <p v-if="!stockShow">¥{{goodsDetail.goodSalePrice | two}}
                            <span>库存{{goodsDetail.goodNum}}件</span>
                        </p>
                        <p v-else>
                          ¥{{modelDetail.skuPrice | two}}
                          <span v-show="!!stockShow">库存{{modelDetail.skuQuantity}}件</span>
                        </p>
                    </div>
                </div>
                <div class="color" v-for="(sitem,index) in goodsChoose" :key="index">
                    <p>{{sitem.name}}：</p>
                    <ul class="color-choose clearfix">
                        <li :class="{isChoosed: item.isActive}" @click="changeChoose(sitem,key)" v-for="(item,key) in sitem.value" :key="key">{{item.name}}</li>
                    </ul>
                </div>
                <div class="number">
                    <span>购买数量：</span>
                    <div class="count">
                        <button :class="[reduceStatus?'minus':'status']" class="minus" @click="reduce">-</button>
                        <input type="text" v-model="value" v-on:blur="freeChangeQuentity">
                        <button :class="[addStatus?'plus':'status']" class="plus" @click="add">+</button>
                    </div>
                </div>
                <div class="buy">
                    <div class="jcar fl" @click="addToCart()">加入购物车</div>
                    <div class="nbuy fl" @click="nowBuy(skuId)">立即购买</div>
                </div>
            </div>
        </mt-popup>
        <div class="goods-img" v-html="goodsDetail.goodContent">

        </div>
        <div class="btm-info">
            <ul>
                <router-link to="/shopcart" tag="li"><i class="iconfont icon-gouwuche"></i>购物车</router-link>
                <li @click="collect()" v-if="!goodsDetail.goodIsFavrite"><i class="iconfont icon-shoucang" ></i>收藏</li>
                <li @click="uncollect()" v-if="goodsDetail.goodIsFavrite"><i class="iconfont icon-shoucang1" v-if="goodsDetail.goodIsFavrite"></i>已收藏</li>
            </ul>
            <div class="two-btn">
                <span @click="handleClick('choose')">加入购物车</span>
                <span @click="handleClick('choose')">立即购买</span>
            </div>
        </div>
    </div>
</template>


<script>
// import footGuide from '../../components/footer/footGuide'
import { Toast } from 'mint-ui';
import { Popup } from 'mint-ui';
import { Swipe, SwipeItem } from 'mint-ui';
import { mapMutations, mapState } from 'vuex'
import threedMax from '../../components/threedMax/threedMax'
export default {
    data() {
        return {
            goodsDetail:'',
            modelDetail:0,
            popupVisible:false,
            stockShow: false,//库存显示
            goodsChoose: '',//商品选择
            reduceStatus: false,//减号状态
            addStatus: false,//加号状态
            value: 1,
            modal:'',
            detailImg: [], //轮播图
            skuId: '',//加入购物车需要的id
            goodParam:[],
            goods:[],//存入vuex的商品
            guid:'',
            params:'pic'
        }
    },
    computed:{

    },
    components:{
      threedMax
    },
    created(){
         this.$http.get('/api/good/goodinfo?id=' + this.$route.query.id).then(res => {
             this.goodsDetail = res.data.data;
             this.goodsChoose = JSON.parse(res.data.data.goodSkuMemo);
             this.detailImg = res.data.data.goodPicUrl.split(",");
             this.goodParam = JSON.parse(res.data.data.goodParam);
         });
    },
    methods:{
        ...mapMutations([
            'PLACE_ORDER',
        ]),
        changeType(param){
            this.params =param
        },
        confirmParams(){
            this.popupVisible = false;
        },
        handleClick(param){
            this.modal = param;
            this.popupVisible = true;
        },
        collect(){
            this.goodsDetail.goodIsFavrite = !this.goodsDetail.goodIsFavrite;
            this.$http.post('/api/userfavorite/tofavrite' ,{
                FavType:3,
                FavToId:this.goodsDetail.id
            }).then(res => {
                if(res.data.success){
                    Toast({
                    message: '收藏成功',
                    position: 'bottom',
                    duration: 1.5e3
                    });
                }
         })
        },
        uncollect(){
            this.goodsDetail.goodIsFavrite = !this.goodsDetail.goodIsFavrite;
            this.$http.post('api/userfavorite/userfavdel', { "Id": 0, "FavType": 3, "FavToId": this.goodsDetail.id }).then(res => {
                Toast({
                    message: '取消收藏',
                    position: 'bottom',
                    duration: 1.5e3
                });
            })
        },
        reduce() {
            if (this.value > 1) {
                this.value--;
                this.selectOperaType = 2
            } else {
                if (this.stockShow == false) {
                    Toast({
                        message: '请选择' + this.goodsChoose.map(function(s) { return s.name }).join('、'),
                        position: 'bottom',
                        duration: 1.5e3
                    });
                }
            }
        },
        add() {
            if (this.value < this.modelDetail.skuQuantity) {
                this.value++;
                this.selectOperaType = 1
            } else {
                if (this.stockShow == false) {
                    Toast({
                        message: '请选择' + this.goodsChoose.map(function(s) { return s.name }).join('、'),
                        position: 'bottom',
                        duration: 1.5e3
                    });
                }

            }
        },
        changeChoose: function(item, key) {
            item.value.forEach(function(i) {
                this.$set(i, 'isActive', false);
            }, this);
            this.$set(item.value[key], 'isActive', true);
        },
        freeChangeQuentity() {
            if (this.value > this.modelDetail.skuQuantity) {
                alert("库存不足");
                this.value = 1;
            }
        },
        addToCart() {
            if (this.stockShow == true) {
                this.$http.post('/api/shopCart/shopcart/', {
                    "SkuInfoId": this.skuId,
                    "CartNum": this.value,
                    "CartGoodId": this.goodsDetail.id,
                    "OperaType": this.selectOperaType,
                    "CreateType": 1
                }).then(res => {
                    console.log(res);
                    if(res.data.success){
                        Toast({
                        message: '成功加入购物车',
                        position: 'bottom',
                        duration: 2e3
                        });
                    }else{
                        Toast({
                        message: res.data.message,
                        position: 'bottom',
                        duration: 2e3
                        });
                    }

                })
                this.popupVisible = false;
            }else {
                Toast({
                    message: '请选择' + this.goodsChoose.map(function(s) { return s.name }).join('、'),
                    position: 'bottom',
                    duration: 1.5e3
                });
            }
        },
        nowBuy(){
            if (this.stockShow == true) {
                this.$http.post('/api/shopCart/shopcart/', {
                    "SkuInfoId": this.skuId,
                    "CartNum": this.value,
                    "CartGoodId": this.goodsDetail.id,
                    "OperaType": this.selectOperaType,
                    "CreateType": 2
                }).then(res => {
                    this.guid = res.data.data.guid;
                    let Good = [];
                    Good.push({
                        goodName:this.goodsDetail.goodName,
                        cartNum:this.value,
                        goodFirstPicUrl:this.detailImg[0],
                        CartGoodId:this.goodsDetail.goodCatId,
                        skuPropName:this.modelDetail.skuPropName,
                        skuPrice:this.modelDetail.skuPrice,
                        guid:this.guid,
                    });
                    this.goods = JSON.stringify(Good);
                    let submitOrder = [];
                    submitOrder.push({
                        goodSupplierId:this.goodsDetail.supplierId,
                        goodSupplierLogo:this.goodsDetail.supplierLogo,
                        goodSupplierName:this.goodsDetail.supplierName,
                        shopCartItems:JSON.parse(this.goods),
                    })
                    this.PLACE_ORDER(submitOrder);
                    this.$router.push({ path: '/submitorder' });
                });


            }else {
                Toast({
                    message: '请选择' + this.goodsChoose.map(function(s) { return s.name }).join('、'),
                    position: 'bottom',
                    duration: 1.5e3
                });
            }
        }
    },
    watch: {
        goodsChoose: {
            handler(value) {
                var _this = this;
                var chlist = [];
                value.map(function(s) {
                    s.value.map(function(c) {
                        if (c.isActive) {
                            chlist.push(c.id);
                        }
                    });
                });
                if (chlist.length == value.length) {
                  _this.$http.post('/api/good/sku?goodId=' + _this.goodsDetail.id + '&prop=' + chlist.join(';')).then(res => {

                    _this.addStatus = true;
                    _this.stockShow = true;

                    _this.modelDetail = res.data;
                    console.info(_this.modelDetail);
                    _this.skuId = _this.modelDetail.id;
                  })
                }
            },
            deep: true
        },
        value(value) {
            if (this.value == 1) {
                this.reduceStatus = false;
            } else if (this.value == this.modelDetail.skuQuantity) {
                this.addStatus = false;
            } else {
                this.reduceStatus = true;
                this.addStatus = true;
            }
        }
    },
    filters:{
        two: function(value) {
            if (!value) { return '' };
            return value.toFixed(2);
        },
        dot: function(value) {
            if (!value) {
                return value
            } else {
                if (value.length > 35) {
                    return value.slice(0, 35) + '...'
                } else {
                    return value
                }
            }
        }
    }


}
</script>
<style >
.mint-toast {
    z-index: 2005 !important;
    max-width: 100%;
    min-width: 60%;
}
.goodsdetail{
    background: #f7f7f7;
}
.banner{
        background: #fff;
        height:  8.333334rem;
        width: 100%;
        position: relative;
}
.mint-swipe img{
    height:  8.333334rem;
    width: 100%;
}
/* .change-btn2{
    position: absolute;
    bottom: 1rem;
    right:.4rem;
}
.change-btn2>span:nth-of-type(1){
    margin-right: .2rem;
}
.change-btn2>span.red{
    color: #ec1019;
} */
.change-btn{
    position: absolute;
    bottom: .32rem;
    right:.4rem;
    width: 3rem;
    height: .6rem;
    background: #eee;
    line-height: .6rem;
    border-radius: 10px;
}
.change-btn>span{
    display: block;
    float: left;
    width: 40%;
    text-align: center;
    color: #333;
    border-radius: 10px;
     height: .6rem;
}
.change-btn>span:nth-of-type(1){
    width: 60%;
}
.change-btn>span.red{
    background: #ec1019;
    color: #fff;
}
.goodsdetail>p{
    background: #fff;
    padding:.32rem  .32rem  0 .32rem;
}
.goods-name{
    font-size: .4rem;
    color: #333333;
    line-height: .54rem;
}
.goods-price{
    color: #ec1019;
    font-size: .48rem;
}
p.goods-info{
    color: #707070;
    font-size: .32rem;
    background: #fff;
    padding-bottom: .32rem;
    overflow: hidden;
}
p.goods-shop{
    background: #e6e6e6;
    padding-bottom: .32rem;
    color: #707070;
    font-size: .32rem;
}
.goods-shop>i{
    margin-right: .15rem;
}
.goods-info>span{
    float: right;
}
.goods-img{
    background: #fff;
    width: 100%;
    overflow-x: hidden;
    padding-top:.4rem;
    padding-bottom:1.4rem;
    font-size:.36rem;
    line-height:.48rem!important;
    text-indent:0;
}

.goods-img img{
    width: 100%;
    float:left;
}


.btm-info{
    width: 100%;
    height: 1.4rem;
    background: #fff;
    position: fixed;
    bottom: 0;
    box-sizing: border-box;
    border-top: 1px solid #ededed;
    padding: .24rem 0;
}
.btm-info>ul{
    float: left;
}
.btm-info>ul>li{
    float: left;
    text-align: center;
    box-sizing: border-box;
    width: 1.9rem;
    border-right: 1px solid #f2f2f2;
    font-size: .32rem;
    color: #666666;
}
.btm-info>ul>li>i{
    display: block;
    font-size: .48rem;
}
.btm-info>ul>li>i.icon-shoucang1{
    color: #ec1019;
}
.two-btn{
    float: right;
    height: .72rem;
}
.two-btn>span{
    display: block;
    float: left;
    margin-right: .32rem;
    width: 2.52rem;
    text-align: center;
    box-sizing: border-box;
    height: .92rem;
    border: 1px solid #ec1019;
    line-height: .92rem;
    font-size: .4rem;
    border-radius: 3px;
    background: #ec1019;
    color: #fff;
}
.two-btn>span:first-child{
    color: #ec1019;
    background: #fff;
}
.condition{
    background: #fff;
    overflow: hidden;
    margin-top: .24rem;
    margin-bottom: .24rem;
}
.condition>li{
    height: 1.2rem;
    line-height: 1.2rem;
    font-size: .36rem;
    color: #333;
    box-sizing: border-box;
    padding:0 .32rem
}
.condition>li:first-of-type{
  border-bottom: 1px solid #f7f7f7;
}
.condition>li>i{
    float: right;
}
.params-wrp{
    width: 10rem;
    overflow: hidden;
}
.params-wrp>h2{
    text-align: center;
    font-size: .44rem;
    line-height: 1.2rem;
    color: #333;
    box-sizing: border-box;
    padding:0 .533333rem ;
}
.params-wrp>p{
    height: 1.2rem;
    line-height: 1.2rem;
    text-align: center;
    font-size: .44rem;
    color: #fff;
    background: #ec1019;
    margin-top: .48rem;
}
.params-wrp>ul{
    padding:0 .533333rem ;
    max-height: 5.24rem;
    overflow-y: scroll;
    overflow-x: hidden;
}
.params-wrp>ul>li:first-child{
     border-top: 0;
}
.params-wrp>ul>li{
    color: #333;
    font-size: .4rem;
    box-sizing: border-box;
    border-top: 1px solid #eee;
    overflow: hidden;
    padding: .2rem 0 ;
    line-height: .48rem;
    padding-left:2.2rem;
    position: relative;
}
.params-wrp>ul>li>span{
    color: #c0c0c0;
    width: 2.2rem;
    display: inline-block;
    position: absolute;
    top:0.2rem;
    left:0;
}
.mint-popup{
    max-height: 11rem;
}
/*  */
.choose-wrp{
    width: 10rem;
}
.title {
    width: 100%;
    box-sizing: border-box;
    padding: 0 .4rem;
}

.picture {
    width: 2.4rem;
    border: 1px solid #ece5f4;
    box-sizing: border-box;
    float: left;
    margin-top: -.6rem;
    border-radius: .133333rem;
    overflow: hidden;
    height: 2rem;
    background: #fff;
}

.picture >img {
    width: 100%;
    height: 100%;
}

.pic-name {
    padding: .3725rem 0 .3725rem .3725rem;
    float: left;
    font-size: .4rem;
    box-sizing: border-box;
    width: 6.5rem;
}

 .pic-name >p {
    color: #ec1019;
    line-height: .66rem;
    font-weight: 700;
}

.pic-name> p >del {
    color: #eee;
    font-size: .32rem;
    margin-left: .266667rem;
    text-decoration: line-through;
    font-weight: normal;
}

.pic-name >p >span {
    float: right;
    color: #333;
    font-weight: normal;
    font-size: .32rem;
}

.color {

    border-top: 1px solid #eee;
    padding:0 .3725rem;
    box-sizing: border-box;
    overflow: hidden;
}

.color>p {
    margin-top: 0.3rem;
    margin-bottom: 0.2rem
}

.color-choose >li {
    float: left;
    line-height: .666667rem;
    box-sizing: border-box;
    border: 1px solid #eee;
    text-align: center;
    border-radius: .133333rem;
    margin-right: .3rem;
    color: #333;
    padding: 0 .266667rem;
    margin-bottom: .3rem
}

.color-choose .isChoosed {
    background: #ec1019;
    border: 1px solid #ec1019;
    color: #fff;
}

.number {
    line-height: .733333rem;
    padding: .3725rem .533333rem .3725rem .3725rem;
    position: relative;
    border-top: 1px solid #eee;
    overflow: hidden;
}

.number span {
    display: block;
    float: left;
}

.number .count {
    width: 3.5rem;
    height: .733333rem;
    line-height: .733333rem;
    border-radius: .133333rem;
    border: 1px solid #eee;
    color: #ec1019;
    overflow: hidden;
    float: right;
}

.number .count input,
.number .count button {
    height: 100%;
    width: 1rem;
    border: 0;
    background: #fff;
    color: #333;
    font-size: .52rem;
}

.number .count button.plus {
    float: right;
    border-left: 1px solid #eee;
    color: #ec1019;
}

.number .count button.minus {
    border-right: 1px solid #eee;
    float: left;
    color: #ec1019;
}

.status {
    color: #333 !important;
}

.number .count input {
    box-sizing: border-box;
    text-align: center;
    font-size: .4rem;
    color: #ec1019;
    width: 1.5rem;
    float: left;
}

.buy {
    width: 100%;
    height: 1.306667rem;
    position: relative;
    text-align: center;
    line-height: 1.306667rem;
    color: #fff;
    font-size: .48rem;
}

.buy_msg {
    position: absolute;
    bottom: 2rem;
    background: lightblue;
    left: 50%;
    margin-left: -3rem;
    width: 6rem;
    text-align: center;
    z-index: 999999;
    line-height: 1rem;
    color: #fff;
    background: rgba(0, 0, 0, 0.8);
    font-size: .48rem;
    border-radius: .2rem;
}

.jcar {
    width: 50%;
    background: linear-gradient(to right, #ec1019,#e9523f );
}

.nbuy {
    width: 50%;
    background: linear-gradient(to right, #ec1019,#e9523f);
}
</style>
